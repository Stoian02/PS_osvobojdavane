// <auto-generated />
using System;
using DataLayer.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240312152042_AddUserForeignKeyToLogEntries")]
    partial class AddUserForeignKeyToLogEntries
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("DataLayer.Model.DatabaseUser", b =>
                {
                    b.Property<int>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Expires")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("_fakNum")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("_id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            _id = 1,
                            Email = "",
                            Expires = new DateTime(2034, 3, 12, 17, 20, 40, 754, DateTimeKind.Local).AddTicks(7606),
                            Name = "John Doe",
                            Password = "$2a$11$VRLMO8RhK05p6WXnzpyRRuotVxfEL0glpWnEElZTbxlzHby5f623e",
                            Role = 1,
                            _fakNum = "000"
                        },
                        new
                        {
                            _id = 2,
                            Email = "",
                            Expires = new DateTime(2025, 3, 12, 17, 20, 40, 879, DateTimeKind.Local).AddTicks(7713),
                            Name = "Doey",
                            Password = "$2a$11$.u0yK4O0inbgUZATH6IFp...cnlJSXIPo/iUYYN4GxAtpVO0Phwlu",
                            Role = 2,
                            _fakNum = "112"
                        },
                        new
                        {
                            _id = 3,
                            Email = "",
                            Expires = new DateTime(2025, 3, 12, 17, 20, 41, 9, DateTimeKind.Local).AddTicks(3073),
                            Name = "Kris",
                            Password = "$2a$11$QT4aScYG3lFlHKoOFxQT6eQiGbogXGjheQ5qAOHI3sccSA34VvnWu",
                            Role = 4,
                            _fakNum = "221"
                        });
                });

            modelBuilder.Entity("DataLayer.Others.LogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Level")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("LogEntries");
                });

            modelBuilder.Entity("DataLayer.Others.LogEntry", b =>
                {
                    b.HasOne("DataLayer.Model.DatabaseUser", "User")
                        .WithMany("LogEntries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataLayer.Model.DatabaseUser", b =>
                {
                    b.Navigation("LogEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
